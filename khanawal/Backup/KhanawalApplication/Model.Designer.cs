//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingIngredients_Ingredients", "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Ingredient), "ListingIngredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingIngredient), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_SideListingMapping_SideListings", "SideListing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.SideListing), "SideListingMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.SideListingMapping), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_MainMessage_ListingRequest", "ListingRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.ListingRequest), "MainMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.MainMessage), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_MessageThread_MainMessage", "MainMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.MainMessage), "MessageThread", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.MessageThread), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Cities_States", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.State), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.City), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_LisitngReviews_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "LisitngReview", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.LisitngReview), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingRequest_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "ListingRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingRequest), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingTriedByUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "ListingTriedByUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingTriedByUser), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_MessageThread_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "MessageThread", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.MessageThread), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_MessageThread_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "MessageThread", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.MessageThread), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_UserCalendar_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "UserCalendar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.UserCalendar), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Listing_CuisineType", "CuisineType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.CuisineType), "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.Listing), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_LisitngReviews_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "LisitngReview", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.LisitngReview), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Listing_RecipeType", "RecipeType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.RecipeType), "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.Listing), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Listing_Taste", "Taste", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.Taste), "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.Listing), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Listing_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.User), "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.Listing), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingAwards_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "ListingAward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingAward), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingIngredients_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "ListingIngredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingIngredient), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingPictures_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "ListingPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingPicture), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingRating_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "ListingRating", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingRating), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingRequest_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.Listing), "ListingRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingRequest), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_ListingTriedByUser_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "ListingTriedByUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.ListingTriedByUser), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_SideListings_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Listing), "SideListingMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.SideListingMapping), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_UserCalendar_Listing", "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.Listing), "UserCalendar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.UserCalendar), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_AdHocRequestUserMapping_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.User), "AdHocRequestUserMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.AdHocRequestUserMapping), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_AdHocRequestTasteMapping_Taste", "Taste", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.Taste), "AdHocRequestTasteMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.AdHocRequestTasteMapping), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_GeoIPCountry_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.Country), "GeoIPCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.GeoIPCountry), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Country_CurrencyType", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.CurrencyType), "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.Country), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_Listing_CurrencyType", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.CurrencyType), "Listing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.Listing), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_AdHocRequest_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KhanawalApplication.User), "AdHocRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.AdHocRequest), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.AdHocRequest), "AdHocRequestPickupLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.AdHocRequestPickupLocation), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.AdHocRequest), "AdHocRequestTasteMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.AdHocRequestTasteMapping), true)]
[assembly: EdmRelationshipAttribute("KhanaWalModel", "FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KhanawalApplication.AdHocRequest), "AdHocRequestUserMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KhanawalApplication.AdHocRequestUserMapping), true)]

#endregion

namespace KhanawalApplication
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class KhanaWalEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new KhanaWalEntities object using the connection string found in the 'KhanaWalEntities' section of the application configuration file.
        /// </summary>
        public KhanaWalEntities() : base("name=KhanaWalEntities", "KhanaWalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KhanaWalEntities object.
        /// </summary>
        public KhanaWalEntities(string connectionString) : base(connectionString, "KhanaWalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KhanaWalEntities object.
        /// </summary>
        public KhanaWalEntities(EntityConnection connection) : base(connection, "KhanaWalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CuisineType> CuisineTypes
        {
            get
            {
                if ((_CuisineTypes == null))
                {
                    _CuisineTypes = base.CreateObjectSet<CuisineType>("CuisineTypes");
                }
                return _CuisineTypes;
            }
        }
        private ObjectSet<CuisineType> _CuisineTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeliveryType> DeliveryTypes
        {
            get
            {
                if ((_DeliveryTypes == null))
                {
                    _DeliveryTypes = base.CreateObjectSet<DeliveryType>("DeliveryTypes");
                }
                return _DeliveryTypes;
            }
        }
        private ObjectSet<DeliveryType> _DeliveryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ingredient> Ingredients
        {
            get
            {
                if ((_Ingredients == null))
                {
                    _Ingredients = base.CreateObjectSet<Ingredient>("Ingredients");
                }
                return _Ingredients;
            }
        }
        private ObjectSet<Ingredient> _Ingredients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingAward> ListingAwards
        {
            get
            {
                if ((_ListingAwards == null))
                {
                    _ListingAwards = base.CreateObjectSet<ListingAward>("ListingAwards");
                }
                return _ListingAwards;
            }
        }
        private ObjectSet<ListingAward> _ListingAwards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingIngredient> ListingIngredients
        {
            get
            {
                if ((_ListingIngredients == null))
                {
                    _ListingIngredients = base.CreateObjectSet<ListingIngredient>("ListingIngredients");
                }
                return _ListingIngredients;
            }
        }
        private ObjectSet<ListingIngredient> _ListingIngredients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingRating> ListingRatings
        {
            get
            {
                if ((_ListingRatings == null))
                {
                    _ListingRatings = base.CreateObjectSet<ListingRating>("ListingRatings");
                }
                return _ListingRatings;
            }
        }
        private ObjectSet<ListingRating> _ListingRatings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingRequest> ListingRequests
        {
            get
            {
                if ((_ListingRequests == null))
                {
                    _ListingRequests = base.CreateObjectSet<ListingRequest>("ListingRequests");
                }
                return _ListingRequests;
            }
        }
        private ObjectSet<ListingRequest> _ListingRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingTriedByUser> ListingTriedByUsers
        {
            get
            {
                if ((_ListingTriedByUsers == null))
                {
                    _ListingTriedByUsers = base.CreateObjectSet<ListingTriedByUser>("ListingTriedByUsers");
                }
                return _ListingTriedByUsers;
            }
        }
        private ObjectSet<ListingTriedByUser> _ListingTriedByUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Localization> Localizations
        {
            get
            {
                if ((_Localizations == null))
                {
                    _Localizations = base.CreateObjectSet<Localization>("Localizations");
                }
                return _Localizations;
            }
        }
        private ObjectSet<Localization> _Localizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecipeType> RecipeTypes
        {
            get
            {
                if ((_RecipeTypes == null))
                {
                    _RecipeTypes = base.CreateObjectSet<RecipeType>("RecipeTypes");
                }
                return _RecipeTypes;
            }
        }
        private ObjectSet<RecipeType> _RecipeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SideListingMapping> SideListingMappings
        {
            get
            {
                if ((_SideListingMappings == null))
                {
                    _SideListingMappings = base.CreateObjectSet<SideListingMapping>("SideListingMappings");
                }
                return _SideListingMappings;
            }
        }
        private ObjectSet<SideListingMapping> _SideListingMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SideListing> SideListings
        {
            get
            {
                if ((_SideListings == null))
                {
                    _SideListings = base.CreateObjectSet<SideListing>("SideListings");
                }
                return _SideListings;
            }
        }
        private ObjectSet<SideListing> _SideListings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Taste> Tastes
        {
            get
            {
                if ((_Tastes == null))
                {
                    _Tastes = base.CreateObjectSet<Taste>("Tastes");
                }
                return _Tastes;
            }
        }
        private ObjectSet<Taste> _Tastes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRecommendation> UserRecommendations
        {
            get
            {
                if ((_UserRecommendations == null))
                {
                    _UserRecommendations = base.CreateObjectSet<UserRecommendation>("UserRecommendations");
                }
                return _UserRecommendations;
            }
        }
        private ObjectSet<UserRecommendation> _UserRecommendations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserWishList> UserWishLists
        {
            get
            {
                if ((_UserWishLists == null))
                {
                    _UserWishLists = base.CreateObjectSet<UserWishList>("UserWishLists");
                }
                return _UserWishLists;
            }
        }
        private ObjectSet<UserWishList> _UserWishLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LisitngReview> LisitngReviews
        {
            get
            {
                if ((_LisitngReviews == null))
                {
                    _LisitngReviews = base.CreateObjectSet<LisitngReview>("LisitngReviews");
                }
                return _LisitngReviews;
            }
        }
        private ObjectSet<LisitngReview> _LisitngReviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MainMessage> MainMessages
        {
            get
            {
                if ((_MainMessages == null))
                {
                    _MainMessages = base.CreateObjectSet<MainMessage>("MainMessages");
                }
                return _MainMessages;
            }
        }
        private ObjectSet<MainMessage> _MainMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageThread> MessageThreads
        {
            get
            {
                if ((_MessageThreads == null))
                {
                    _MessageThreads = base.CreateObjectSet<MessageThread>("MessageThreads");
                }
                return _MessageThreads;
            }
        }
        private ObjectSet<MessageThread> _MessageThreads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingPicture> ListingPictures
        {
            get
            {
                if ((_ListingPictures == null))
                {
                    _ListingPictures = base.CreateObjectSet<ListingPicture>("ListingPictures");
                }
                return _ListingPictures;
            }
        }
        private ObjectSet<ListingPicture> _ListingPictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCalendar> UserCalendars
        {
            get
            {
                if ((_UserCalendars == null))
                {
                    _UserCalendars = base.CreateObjectSet<UserCalendar>("UserCalendars");
                }
                return _UserCalendars;
            }
        }
        private ObjectSet<UserCalendar> _UserCalendars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Listing> Listings
        {
            get
            {
                if ((_Listings == null))
                {
                    _Listings = base.CreateObjectSet<Listing>("Listings");
                }
                return _Listings;
            }
        }
        private ObjectSet<Listing> _Listings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdHocRequestUserMapping> AdHocRequestUserMappings
        {
            get
            {
                if ((_AdHocRequestUserMappings == null))
                {
                    _AdHocRequestUserMappings = base.CreateObjectSet<AdHocRequestUserMapping>("AdHocRequestUserMappings");
                }
                return _AdHocRequestUserMappings;
            }
        }
        private ObjectSet<AdHocRequestUserMapping> _AdHocRequestUserMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdHocRequestPickupLocation> AdHocRequestPickupLocations
        {
            get
            {
                if ((_AdHocRequestPickupLocations == null))
                {
                    _AdHocRequestPickupLocations = base.CreateObjectSet<AdHocRequestPickupLocation>("AdHocRequestPickupLocations");
                }
                return _AdHocRequestPickupLocations;
            }
        }
        private ObjectSet<AdHocRequestPickupLocation> _AdHocRequestPickupLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdHocRequestTasteMapping> AdHocRequestTasteMappings
        {
            get
            {
                if ((_AdHocRequestTasteMappings == null))
                {
                    _AdHocRequestTasteMappings = base.CreateObjectSet<AdHocRequestTasteMapping>("AdHocRequestTasteMappings");
                }
                return _AdHocRequestTasteMappings;
            }
        }
        private ObjectSet<AdHocRequestTasteMapping> _AdHocRequestTasteMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeoIPCountry> GeoIPCountries
        {
            get
            {
                if ((_GeoIPCountries == null))
                {
                    _GeoIPCountries = base.CreateObjectSet<GeoIPCountry>("GeoIPCountries");
                }
                return _GeoIPCountries;
            }
        }
        private ObjectSet<GeoIPCountry> _GeoIPCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyType> CurrencyTypes
        {
            get
            {
                if ((_CurrencyTypes == null))
                {
                    _CurrencyTypes = base.CreateObjectSet<CurrencyType>("CurrencyTypes");
                }
                return _CurrencyTypes;
            }
        }
        private ObjectSet<CurrencyType> _CurrencyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdHocRequest> AdHocRequests
        {
            get
            {
                if ((_AdHocRequests == null))
                {
                    _AdHocRequests = base.CreateObjectSet<AdHocRequest>("AdHocRequests");
                }
                return _AdHocRequests;
            }
        }
        private ObjectSet<AdHocRequest> _AdHocRequests;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CuisineTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCuisineTypes(CuisineType cuisineType)
        {
            base.AddObject("CuisineTypes", cuisineType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeliveryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeliveryTypes(DeliveryType deliveryType)
        {
            base.AddObject("DeliveryTypes", deliveryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ingredients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIngredients(Ingredient ingredient)
        {
            base.AddObject("Ingredients", ingredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingAwards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingAwards(ListingAward listingAward)
        {
            base.AddObject("ListingAwards", listingAward);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingIngredients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingIngredients(ListingIngredient listingIngredient)
        {
            base.AddObject("ListingIngredients", listingIngredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingRatings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingRatings(ListingRating listingRating)
        {
            base.AddObject("ListingRatings", listingRating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingRequests(ListingRequest listingRequest)
        {
            base.AddObject("ListingRequests", listingRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingTriedByUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingTriedByUsers(ListingTriedByUser listingTriedByUser)
        {
            base.AddObject("ListingTriedByUsers", listingTriedByUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Localizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocalizations(Localization localization)
        {
            base.AddObject("Localizations", localization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecipeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecipeTypes(RecipeType recipeType)
        {
            base.AddObject("RecipeTypes", recipeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SideListingMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSideListingMappings(SideListingMapping sideListingMapping)
        {
            base.AddObject("SideListingMappings", sideListingMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SideListings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSideListings(SideListing sideListing)
        {
            base.AddObject("SideListings", sideListing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tastes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTastes(Taste taste)
        {
            base.AddObject("Tastes", taste);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRecommendations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRecommendations(UserRecommendation userRecommendation)
        {
            base.AddObject("UserRecommendations", userRecommendation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserWishLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserWishLists(UserWishList userWishList)
        {
            base.AddObject("UserWishLists", userWishList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LisitngReviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLisitngReviews(LisitngReview lisitngReview)
        {
            base.AddObject("LisitngReviews", lisitngReview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MainMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMainMessages(MainMessage mainMessage)
        {
            base.AddObject("MainMessages", mainMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageThreads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageThreads(MessageThread messageThread)
        {
            base.AddObject("MessageThreads", messageThread);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingPictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingPictures(ListingPicture listingPicture)
        {
            base.AddObject("ListingPictures", listingPicture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCalendars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCalendars(UserCalendar userCalendar)
        {
            base.AddObject("UserCalendars", userCalendar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Listings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListings(Listing listing)
        {
            base.AddObject("Listings", listing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdHocRequestUserMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdHocRequestUserMappings(AdHocRequestUserMapping adHocRequestUserMapping)
        {
            base.AddObject("AdHocRequestUserMappings", adHocRequestUserMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdHocRequestPickupLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdHocRequestPickupLocations(AdHocRequestPickupLocation adHocRequestPickupLocation)
        {
            base.AddObject("AdHocRequestPickupLocations", adHocRequestPickupLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdHocRequestTasteMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdHocRequestTasteMappings(AdHocRequestTasteMapping adHocRequestTasteMapping)
        {
            base.AddObject("AdHocRequestTasteMappings", adHocRequestTasteMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeoIPCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeoIPCountries(GeoIPCountry geoIPCountry)
        {
            base.AddObject("GeoIPCountries", geoIPCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyTypes(CurrencyType currencyType)
        {
            base.AddObject("CurrencyTypes", currencyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdHocRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdHocRequests(AdHocRequest adHocRequest)
        {
            base.AddObject("AdHocRequests", adHocRequest);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="searchText">No Metadata Documentation available.</param>
        public ObjectResult<Listing> ListingSearch(global::System.String searchText)
        {
            ObjectParameter searchTextParameter;
            if (searchText != null)
            {
                searchTextParameter = new ObjectParameter("SearchText", searchText);
            }
            else
            {
                searchTextParameter = new ObjectParameter("SearchText", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Listing>("ListingSearch", searchTextParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="searchText">No Metadata Documentation available.</param>
        public ObjectResult<Listing> ListingSearch(global::System.String searchText, MergeOption mergeOption)
        {
            ObjectParameter searchTextParameter;
            if (searchText != null)
            {
                searchTextParameter = new ObjectParameter("SearchText", searchText);
            }
            else
            {
                searchTextParameter = new ObjectParameter("SearchText", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Listing>("ListingSearch", mergeOption, searchTextParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="AdHocRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdHocRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdHocRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="deliveryTime">Initial value of the DeliveryTime property.</param>
        /// <param name="isOpen">Initial value of the IsOpen property.</param>
        public static AdHocRequest CreateAdHocRequest(global::System.Int32 id, global::System.String title, global::System.DateTime deliveryTime, global::System.Boolean isOpen)
        {
            AdHocRequest adHocRequest = new AdHocRequest();
            adHocRequest.Id = id;
            adHocRequest.Title = title;
            adHocRequest.DeliveryTime = deliveryTime;
            adHocRequest.IsOpen = isOpen;
            return adHocRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SideDishesWanted
        {
            get
            {
                return _SideDishesWanted;
            }
            set
            {
                OnSideDishesWantedChanging(value);
                ReportPropertyChanging("SideDishesWanted");
                _SideDishesWanted = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SideDishesWanted");
                OnSideDishesWantedChanged();
            }
        }
        private global::System.String _SideDishesWanted;
        partial void OnSideDishesWantedChanging(global::System.String value);
        partial void OnSideDishesWantedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeliveryTime
        {
            get
            {
                return _DeliveryTime;
            }
            set
            {
                OnDeliveryTimeChanging(value);
                ReportPropertyChanging("DeliveryTime");
                _DeliveryTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryTime");
                OnDeliveryTimeChanged();
            }
        }
        private global::System.DateTime _DeliveryTime;
        partial void OnDeliveryTimeChanging(global::System.DateTime value);
        partial void OnDeliveryTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IngredientsToAvoide
        {
            get
            {
                return _IngredientsToAvoide;
            }
            set
            {
                OnIngredientsToAvoideChanging(value);
                ReportPropertyChanging("IngredientsToAvoide");
                _IngredientsToAvoide = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IngredientsToAvoide");
                OnIngredientsToAvoideChanged();
            }
        }
        private global::System.String _IngredientsToAvoide;
        partial void OnIngredientsToAvoideChanging(global::System.String value);
        partial void OnIngredientsToAvoideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVeg
        {
            get
            {
                return _IsVeg;
            }
            set
            {
                OnIsVegChanging(value);
                ReportPropertyChanging("IsVeg");
                _IsVeg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVeg");
                OnIsVegChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVeg;
        partial void OnIsVegChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNonVeg
        {
            get
            {
                return _IsNonVeg;
            }
            set
            {
                OnIsNonVegChanging(value);
                ReportPropertyChanging("IsNonVeg");
                _IsNonVeg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNonVeg");
                OnIsNonVegChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNonVeg;
        partial void OnIsNonVegChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNonVegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Double> _Cost;
        partial void OnCostChanging(Nullable<global::System.Double> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalInformaition
        {
            get
            {
                return _AdditionalInformaition;
            }
            set
            {
                OnAdditionalInformaitionChanging(value);
                ReportPropertyChanging("AdditionalInformaition");
                _AdditionalInformaition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalInformaition");
                OnAdditionalInformaitionChanged();
            }
        }
        private global::System.String _AdditionalInformaition;
        partial void OnAdditionalInformaitionChanging(global::System.String value);
        partial void OnAdditionalInformaitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HomeDelivery
        {
            get
            {
                return _HomeDelivery;
            }
            set
            {
                OnHomeDeliveryChanging(value);
                ReportPropertyChanging("HomeDelivery");
                _HomeDelivery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeDelivery");
                OnHomeDeliveryChanged();
            }
        }
        private Nullable<global::System.Boolean> _HomeDelivery;
        partial void OnHomeDeliveryChanging(Nullable<global::System.Boolean> value);
        partial void OnHomeDeliveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOpen
        {
            get
            {
                return _IsOpen;
            }
            set
            {
                OnIsOpenChanging(value);
                ReportPropertyChanging("IsOpen");
                _IsOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOpen");
                OnIsOpenChanged();
            }
        }
        private global::System.Boolean _IsOpen;
        partial void OnIsOpenChanging(global::System.Boolean value);
        partial void OnIsOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonCount
        {
            get
            {
                return _PersonCount;
            }
            set
            {
                OnPersonCountChanging(value);
                ReportPropertyChanging("PersonCount");
                _PersonCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonCount");
                OnPersonCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonCount;
        partial void OnPersonCountChanging(Nullable<global::System.Int32> value);
        partial void OnPersonCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequest_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_AdHocRequest_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_AdHocRequest_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_AdHocRequest_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_AdHocRequest_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequestPickupLocation")]
        public EntityCollection<AdHocRequestPickupLocation> AdHocRequestPickupLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdHocRequestPickupLocation>("KhanaWalModel.FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequestPickupLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdHocRequestPickupLocation>("KhanaWalModel.FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequestPickupLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequestTasteMapping")]
        public EntityCollection<AdHocRequestTasteMapping> AdHocRequestTasteMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdHocRequestTasteMapping>("KhanaWalModel.FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequestTasteMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdHocRequestTasteMapping>("KhanaWalModel.FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequestTasteMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequestUserMapping")]
        public EntityCollection<AdHocRequestUserMapping> AdHocRequestUserMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdHocRequestUserMapping>("KhanaWalModel.FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequestUserMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdHocRequestUserMapping>("KhanaWalModel.FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequestUserMapping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="AdHocRequestPickupLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdHocRequestPickupLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdHocRequestPickupLocation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pinCode">Initial value of the PinCode property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="adHocRequestId">Initial value of the AdHocRequestId property.</param>
        public static AdHocRequestPickupLocation CreateAdHocRequestPickupLocation(global::System.Int32 id, global::System.String pinCode, global::System.String city, global::System.String state, global::System.Int32 adHocRequestId)
        {
            AdHocRequestPickupLocation adHocRequestPickupLocation = new AdHocRequestPickupLocation();
            adHocRequestPickupLocation.ID = id;
            adHocRequestPickupLocation.PinCode = pinCode;
            adHocRequestPickupLocation.City = city;
            adHocRequestPickupLocation.State = state;
            adHocRequestPickupLocation.AdHocRequestId = adHocRequestId;
            return adHocRequestPickupLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddRessLine1
        {
            get
            {
                return _AddRessLine1;
            }
            set
            {
                OnAddRessLine1Changing(value);
                ReportPropertyChanging("AddRessLine1");
                _AddRessLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddRessLine1");
                OnAddRessLine1Changed();
            }
        }
        private global::System.String _AddRessLine1;
        partial void OnAddRessLine1Changing(global::System.String value);
        partial void OnAddRessLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddRessLine2
        {
            get
            {
                return _AddRessLine2;
            }
            set
            {
                OnAddRessLine2Changing(value);
                ReportPropertyChanging("AddRessLine2");
                _AddRessLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddRessLine2");
                OnAddRessLine2Changed();
            }
        }
        private global::System.String _AddRessLine2;
        partial void OnAddRessLine2Changing(global::System.String value);
        partial void OnAddRessLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                OnPinCodeChanging(value);
                ReportPropertyChanging("PinCode");
                _PinCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PinCode");
                OnPinCodeChanged();
            }
        }
        private global::System.String _PinCode;
        partial void OnPinCodeChanging(global::System.String value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LandMark
        {
            get
            {
                return _LandMark;
            }
            set
            {
                OnLandMarkChanging(value);
                ReportPropertyChanging("LandMark");
                _LandMark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LandMark");
                OnLandMarkChanged();
            }
        }
        private global::System.String _LandMark;
        partial void OnLandMarkChanging(global::System.String value);
        partial void OnLandMarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdHocRequestId
        {
            get
            {
                return _AdHocRequestId;
            }
            set
            {
                OnAdHocRequestIdChanging(value);
                ReportPropertyChanging("AdHocRequestId");
                _AdHocRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdHocRequestId");
                OnAdHocRequestIdChanged();
            }
        }
        private global::System.Int32 _AdHocRequestId;
        partial void OnAdHocRequestIdChanging(global::System.Int32 value);
        partial void OnAdHocRequestIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequest")]
        public AdHocRequest AdHocRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdHocRequest> AdHocRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestPickupLocation_AdHocRequest", "AdHocRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="AdHocRequestTasteMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdHocRequestTasteMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdHocRequestTasteMapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="tasteID">Initial value of the TasteID property.</param>
        public static AdHocRequestTasteMapping CreateAdHocRequestTasteMapping(global::System.Int32 id, global::System.Int32 requestID, global::System.Int32 tasteID)
        {
            AdHocRequestTasteMapping adHocRequestTasteMapping = new AdHocRequestTasteMapping();
            adHocRequestTasteMapping.ID = id;
            adHocRequestTasteMapping.RequestID = requestID;
            adHocRequestTasteMapping.TasteID = tasteID;
            return adHocRequestTasteMapping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                OnRequestIDChanging(value);
                ReportPropertyChanging("RequestID");
                _RequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestID");
                OnRequestIDChanged();
            }
        }
        private global::System.Int32 _RequestID;
        partial void OnRequestIDChanging(global::System.Int32 value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TasteID
        {
            get
            {
                return _TasteID;
            }
            set
            {
                OnTasteIDChanging(value);
                ReportPropertyChanging("TasteID");
                _TasteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TasteID");
                OnTasteIDChanged();
            }
        }
        private global::System.Int32 _TasteID;
        partial void OnTasteIDChanging(global::System.Int32 value);
        partial void OnTasteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestTasteMapping_Taste", "Taste")]
        public Taste Taste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taste>("KhanaWalModel.FK_AdHocRequestTasteMapping_Taste", "Taste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taste>("KhanaWalModel.FK_AdHocRequestTasteMapping_Taste", "Taste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Taste> TasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taste>("KhanaWalModel.FK_AdHocRequestTasteMapping_Taste", "Taste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Taste>("KhanaWalModel.FK_AdHocRequestTasteMapping_Taste", "Taste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequest")]
        public AdHocRequest AdHocRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdHocRequest> AdHocRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestTasteMapping_AdHocRequest", "AdHocRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="AdHocRequestUserMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdHocRequestUserMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdHocRequestUserMapping object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="adhocRequestId">Initial value of the AdhocRequestId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AdHocRequestUserMapping CreateAdHocRequestUserMapping(global::System.Int32 id, global::System.Int32 adhocRequestId, global::System.Int32 userId)
        {
            AdHocRequestUserMapping adHocRequestUserMapping = new AdHocRequestUserMapping();
            adHocRequestUserMapping.Id = id;
            adHocRequestUserMapping.AdhocRequestId = adhocRequestId;
            adHocRequestUserMapping.UserId = userId;
            return adHocRequestUserMapping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdhocRequestId
        {
            get
            {
                return _AdhocRequestId;
            }
            set
            {
                OnAdhocRequestIdChanging(value);
                ReportPropertyChanging("AdhocRequestId");
                _AdhocRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdhocRequestId");
                OnAdhocRequestIdChanged();
            }
        }
        private global::System.Int32 _AdhocRequestId;
        partial void OnAdhocRequestIdChanging(global::System.Int32 value);
        partial void OnAdhocRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestUserMapping_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_AdHocRequestUserMapping_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_AdHocRequestUserMapping_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_AdHocRequestUserMapping_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_AdHocRequestUserMapping_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequest")]
        public AdHocRequest AdHocRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdHocRequest> AdHocRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdHocRequest>("KhanaWalModel.FK_AdHocRequestUserMapping_AdHocRequest", "AdHocRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="city_id">Initial value of the city_id property.</param>
        public static City CreateCity(global::System.Int32 city_id)
        {
            City city = new City();
            city.city_id = city_id;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 city_id
        {
            get
            {
                return _city_id;
            }
            set
            {
                if (_city_id != value)
                {
                    Oncity_idChanging(value);
                    ReportPropertyChanging("city_id");
                    _city_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("city_id");
                    Oncity_idChanged();
                }
            }
        }
        private global::System.Int32 _city_id;
        partial void Oncity_idChanging(global::System.Int32 value);
        partial void Oncity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city_name
        {
            get
            {
                return _city_name;
            }
            set
            {
                Oncity_nameChanging(value);
                ReportPropertyChanging("city_name");
                _city_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city_name");
                Oncity_nameChanged();
            }
        }
        private global::System.String _city_name;
        partial void Oncity_nameChanging(global::System.String value);
        partial void Oncity_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Cities_States", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("KhanaWalModel.FK_Cities_States", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("KhanaWalModel.FK_Cities_States", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("KhanaWalModel.FK_Cities_States", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("KhanaWalModel.FK_Cities_States", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currencyTypeId">Initial value of the CurrencyTypeId property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name, global::System.Int32 currencyTypeId)
        {
            Country country = new Country();
            country.ID = id;
            country.Name = name;
            country.CurrencyTypeId = currencyTypeId;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeId
        {
            get
            {
                return _CurrencyTypeId;
            }
            set
            {
                OnCurrencyTypeIdChanging(value);
                ReportPropertyChanging("CurrencyTypeId");
                _CurrencyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeId");
                OnCurrencyTypeIdChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeId;
        partial void OnCurrencyTypeIdChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_GeoIPCountry_Country", "GeoIPCountry")]
        public EntityCollection<GeoIPCountry> GeoIPCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeoIPCountry>("KhanaWalModel.FK_GeoIPCountry_Country", "GeoIPCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeoIPCountry>("KhanaWalModel.FK_GeoIPCountry_Country", "GeoIPCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Country_CurrencyType", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("KhanaWalModel.FK_Country_CurrencyType", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("KhanaWalModel.FK_Country_CurrencyType", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("KhanaWalModel.FK_Country_CurrencyType", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("KhanaWalModel.FK_Country_CurrencyType", "CurrencyType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="CuisineType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CuisineType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CuisineType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CuisineType CreateCuisineType(global::System.Int32 id, global::System.String name)
        {
            CuisineType cuisineType = new CuisineType();
            cuisineType.ID = id;
            cuisineType.Name = name;
            return cuisineType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_CuisineType", "Listing")]
        public EntityCollection<Listing> Listings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("KhanaWalModel.FK_Listing_CuisineType", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("KhanaWalModel.FK_Listing_CuisineType", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="CurrencyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CurrencyType CreateCurrencyType(global::System.Int32 id, global::System.String name)
        {
            CurrencyType currencyType = new CurrencyType();
            currencyType.ID = id;
            currencyType.Name = name;
            return currencyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Country_CurrencyType", "Country")]
        public EntityCollection<Country> Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Country>("KhanaWalModel.FK_Country_CurrencyType", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Country>("KhanaWalModel.FK_Country_CurrencyType", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_CurrencyType", "Listing")]
        public EntityCollection<Listing> Listings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("KhanaWalModel.FK_Listing_CurrencyType", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("KhanaWalModel.FK_Listing_CurrencyType", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="DeliveryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeliveryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeliveryType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static DeliveryType CreateDeliveryType(global::System.Int32 id)
        {
            DeliveryType deliveryType = new DeliveryType();
            deliveryType.ID = id;
            return deliveryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="GeoIPCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeoIPCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeoIPCountry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static GeoIPCountry CreateGeoIPCountry(global::System.Int32 id)
        {
            GeoIPCountry geoIPCountry = new GeoIPCountry();
            geoIPCountry.ID = id;
            return geoIPCountry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IpFrom
        {
            get
            {
                return _IpFrom;
            }
            set
            {
                OnIpFromChanging(value);
                ReportPropertyChanging("IpFrom");
                _IpFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IpFrom");
                OnIpFromChanged();
            }
        }
        private global::System.String _IpFrom;
        partial void OnIpFromChanging(global::System.String value);
        partial void OnIpFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IpTo
        {
            get
            {
                return _IpTo;
            }
            set
            {
                OnIpToChanging(value);
                ReportPropertyChanging("IpTo");
                _IpTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IpTo");
                OnIpToChanged();
            }
        }
        private global::System.String _IpTo;
        partial void OnIpToChanging(global::System.String value);
        partial void OnIpToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> IpFromRange
        {
            get
            {
                return _IpFromRange;
            }
            set
            {
                OnIpFromRangeChanging(value);
                ReportPropertyChanging("IpFromRange");
                _IpFromRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IpFromRange");
                OnIpFromRangeChanged();
            }
        }
        private Nullable<global::System.Double> _IpFromRange;
        partial void OnIpFromRangeChanging(Nullable<global::System.Double> value);
        partial void OnIpFromRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> IpToRange
        {
            get
            {
                return _IpToRange;
            }
            set
            {
                OnIpToRangeChanging(value);
                ReportPropertyChanging("IpToRange");
                _IpToRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IpToRange");
                OnIpToRangeChanged();
            }
        }
        private Nullable<global::System.Double> _IpToRange;
        partial void OnIpToRangeChanging(Nullable<global::System.Double> value);
        partial void OnIpToRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryShortName
        {
            get
            {
                return _CountryShortName;
            }
            set
            {
                OnCountryShortNameChanging(value);
                ReportPropertyChanging("CountryShortName");
                _CountryShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryShortName");
                OnCountryShortNameChanged();
            }
        }
        private global::System.String _CountryShortName;
        partial void OnCountryShortNameChanging(global::System.String value);
        partial void OnCountryShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_GeoIPCountry_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("KhanaWalModel.FK_GeoIPCountry_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("KhanaWalModel.FK_GeoIPCountry_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("KhanaWalModel.FK_GeoIPCountry_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("KhanaWalModel.FK_GeoIPCountry_Country", "Country", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="Ingredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ingredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ingredient object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="validated">Initial value of the Validated property.</param>
        public static Ingredient CreateIngredient(global::System.Int32 id, global::System.String name, global::System.Boolean validated)
        {
            Ingredient ingredient = new Ingredient();
            ingredient.ID = id;
            ingredient.Name = name;
            ingredient.Validated = validated;
            return ingredient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Validated
        {
            get
            {
                return _Validated;
            }
            set
            {
                OnValidatedChanging(value);
                ReportPropertyChanging("Validated");
                _Validated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Validated");
                OnValidatedChanged();
            }
        }
        private global::System.Boolean _Validated;
        partial void OnValidatedChanging(global::System.Boolean value);
        partial void OnValidatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingIngredients_Ingredients", "ListingIngredient")]
        public EntityCollection<ListingIngredient> ListingIngredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingIngredient>("KhanaWalModel.FK_ListingIngredients_Ingredients", "ListingIngredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingIngredient>("KhanaWalModel.FK_ListingIngredients_Ingredients", "ListingIngredient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Language CreateLanguage(global::System.Int32 id)
        {
            Language language = new Language();
            language.ID = id;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language1
        {
            get
            {
                return _Language1;
            }
            set
            {
                OnLanguage1Changing(value);
                ReportPropertyChanging("Language1");
                _Language1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language1");
                OnLanguage1Changed();
            }
        }
        private global::System.String _Language1;
        partial void OnLanguage1Changing(global::System.String value);
        partial void OnLanguage1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="LisitngReview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LisitngReview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LisitngReview object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="review">Initial value of the Review property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static LisitngReview CreateLisitngReview(global::System.Int32 id, global::System.String review, global::System.Int32 listingID, global::System.Int32 userID)
        {
            LisitngReview lisitngReview = new LisitngReview();
            lisitngReview.ID = id;
            lisitngReview.Review = review;
            lisitngReview.ListingID = listingID;
            lisitngReview.UserID = userID;
            return lisitngReview;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Review
        {
            get
            {
                return _Review;
            }
            set
            {
                OnReviewChanging(value);
                ReportPropertyChanging("Review");
                _Review = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Review");
                OnReviewChanged();
            }
        }
        private global::System.String _Review;
        partial void OnReviewChanging(global::System.String value);
        partial void OnReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TasteRating
        {
            get
            {
                return _TasteRating;
            }
            set
            {
                OnTasteRatingChanging(value);
                ReportPropertyChanging("TasteRating");
                _TasteRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TasteRating");
                OnTasteRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _TasteRating;
        partial void OnTasteRatingChanging(Nullable<global::System.Int32> value);
        partial void OnTasteRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QuantityRating
        {
            get
            {
                return _QuantityRating;
            }
            set
            {
                OnQuantityRatingChanging(value);
                ReportPropertyChanging("QuantityRating");
                _QuantityRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuantityRating");
                OnQuantityRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _QuantityRating;
        partial void OnQuantityRatingChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VFMRating
        {
            get
            {
                return _VFMRating;
            }
            set
            {
                OnVFMRatingChanging(value);
                ReportPropertyChanging("VFMRating");
                _VFMRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VFMRating");
                OnVFMRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _VFMRating;
        partial void OnVFMRatingChanging(Nullable<global::System.Int32> value);
        partial void OnVFMRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceBehaviorRating
        {
            get
            {
                return _ServiceBehaviorRating;
            }
            set
            {
                OnServiceBehaviorRatingChanging(value);
                ReportPropertyChanging("ServiceBehaviorRating");
                _ServiceBehaviorRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceBehaviorRating");
                OnServiceBehaviorRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceBehaviorRating;
        partial void OnServiceBehaviorRatingChanging(Nullable<global::System.Int32> value);
        partial void OnServiceBehaviorRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OverAllRating
        {
            get
            {
                return _OverAllRating;
            }
            set
            {
                OnOverAllRatingChanging(value);
                ReportPropertyChanging("OverAllRating");
                _OverAllRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverAllRating");
                OnOverAllRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _OverAllRating;
        partial void OnOverAllRatingChanging(Nullable<global::System.Int32> value);
        partial void OnOverAllRatingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_LisitngReviews_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_LisitngReviews_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_LisitngReviews_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_LisitngReviews_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_LisitngReviews_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_LisitngReviews_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_LisitngReviews_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_LisitngReviews_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_LisitngReviews_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_LisitngReviews_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="Listing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Listing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Listing object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="vegOrNonVeg">Initial value of the VegOrNonVeg property.</param>
        /// <param name="servings">Initial value of the Servings property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="homeAddressAsPickUpLocation">Initial value of the HomeAddressAsPickUpLocation property.</param>
        /// <param name="conformaitonMessageRequired">Initial value of the ConformaitonMessageRequired property.</param>
        /// <param name="homeDelivery">Initial value of the HomeDelivery property.</param>
        /// <param name="sideDishProvided">Initial value of the SideDishProvided property.</param>
        /// <param name="validated">Initial value of the Validated property.</param>
        public static Listing CreateListing(global::System.Int32 id, global::System.String title, global::System.Boolean vegOrNonVeg, global::System.Int32 servings, global::System.String description, global::System.Boolean homeAddressAsPickUpLocation, global::System.Boolean conformaitonMessageRequired, global::System.Boolean homeDelivery, global::System.Boolean sideDishProvided, global::System.Boolean validated)
        {
            Listing listing = new Listing();
            listing.ID = id;
            listing.Title = title;
            listing.VegOrNonVeg = vegOrNonVeg;
            listing.Servings = servings;
            listing.Description = description;
            listing.HomeAddressAsPickUpLocation = homeAddressAsPickUpLocation;
            listing.ConformaitonMessageRequired = conformaitonMessageRequired;
            listing.HomeDelivery = homeDelivery;
            listing.SideDishProvided = sideDishProvided;
            listing.Validated = validated;
            return listing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VegOrNonVeg
        {
            get
            {
                return _VegOrNonVeg;
            }
            set
            {
                OnVegOrNonVegChanging(value);
                ReportPropertyChanging("VegOrNonVeg");
                _VegOrNonVeg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VegOrNonVeg");
                OnVegOrNonVegChanged();
            }
        }
        private global::System.Boolean _VegOrNonVeg;
        partial void OnVegOrNonVegChanging(global::System.Boolean value);
        partial void OnVegOrNonVegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TasteID
        {
            get
            {
                return _TasteID;
            }
            set
            {
                OnTasteIDChanging(value);
                ReportPropertyChanging("TasteID");
                _TasteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TasteID");
                OnTasteIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TasteID;
        partial void OnTasteIDChanging(Nullable<global::System.Int32> value);
        partial void OnTasteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecipeTypeID
        {
            get
            {
                return _RecipeTypeID;
            }
            set
            {
                OnRecipeTypeIDChanging(value);
                ReportPropertyChanging("RecipeTypeID");
                _RecipeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecipeTypeID");
                OnRecipeTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RecipeTypeID;
        partial void OnRecipeTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRecipeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CuisineTypeID
        {
            get
            {
                return _CuisineTypeID;
            }
            set
            {
                OnCuisineTypeIDChanging(value);
                ReportPropertyChanging("CuisineTypeID");
                _CuisineTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CuisineTypeID");
                OnCuisineTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CuisineTypeID;
        partial void OnCuisineTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCuisineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Servings
        {
            get
            {
                return _Servings;
            }
            set
            {
                OnServingsChanging(value);
                ReportPropertyChanging("Servings");
                _Servings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Servings");
                OnServingsChanged();
            }
        }
        private global::System.Int32 _Servings;
        partial void OnServingsChanging(global::System.Int32 value);
        partial void OnServingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Double> _Cost;
        partial void OnCostChanging(Nullable<global::System.Double> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FreeHomedelivery
        {
            get
            {
                return _FreeHomedelivery;
            }
            set
            {
                OnFreeHomedeliveryChanging(value);
                ReportPropertyChanging("FreeHomedelivery");
                _FreeHomedelivery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeHomedelivery");
                OnFreeHomedeliveryChanged();
            }
        }
        private Nullable<global::System.Boolean> _FreeHomedelivery;
        partial void OnFreeHomedeliveryChanging(Nullable<global::System.Boolean> value);
        partial void OnFreeHomedeliveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HomedeliveryCharges
        {
            get
            {
                return _HomedeliveryCharges;
            }
            set
            {
                OnHomedeliveryChargesChanging(value);
                ReportPropertyChanging("HomedeliveryCharges");
                _HomedeliveryCharges = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomedeliveryCharges");
                OnHomedeliveryChargesChanged();
            }
        }
        private Nullable<global::System.Int32> _HomedeliveryCharges;
        partial void OnHomedeliveryChargesChanging(Nullable<global::System.Int32> value);
        partial void OnHomedeliveryChargesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HomeAddressAsPickUpLocation
        {
            get
            {
                return _HomeAddressAsPickUpLocation;
            }
            set
            {
                OnHomeAddressAsPickUpLocationChanging(value);
                ReportPropertyChanging("HomeAddressAsPickUpLocation");
                _HomeAddressAsPickUpLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeAddressAsPickUpLocation");
                OnHomeAddressAsPickUpLocationChanged();
            }
        }
        private global::System.Boolean _HomeAddressAsPickUpLocation;
        partial void OnHomeAddressAsPickUpLocationChanging(global::System.Boolean value);
        partial void OnHomeAddressAsPickUpLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AddressLang
        {
            get
            {
                return _AddressLang;
            }
            set
            {
                OnAddressLangChanging(value);
                ReportPropertyChanging("AddressLang");
                _AddressLang = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressLang");
                OnAddressLangChanged();
            }
        }
        private Nullable<global::System.Double> _AddressLang;
        partial void OnAddressLangChanging(Nullable<global::System.Double> value);
        partial void OnAddressLangChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AddressLat
        {
            get
            {
                return _AddressLat;
            }
            set
            {
                OnAddressLatChanging(value);
                ReportPropertyChanging("AddressLat");
                _AddressLat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressLat");
                OnAddressLatChanged();
            }
        }
        private Nullable<global::System.Double> _AddressLat;
        partial void OnAddressLatChanging(Nullable<global::System.Double> value);
        partial void OnAddressLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CancellationType
        {
            get
            {
                return _CancellationType;
            }
            set
            {
                OnCancellationTypeChanging(value);
                ReportPropertyChanging("CancellationType");
                _CancellationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancellationType");
                OnCancellationTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _CancellationType;
        partial void OnCancellationTypeChanging(Nullable<global::System.Int32> value);
        partial void OnCancellationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int32> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ConformaitonMessageRequired
        {
            get
            {
                return _ConformaitonMessageRequired;
            }
            set
            {
                OnConformaitonMessageRequiredChanging(value);
                ReportPropertyChanging("ConformaitonMessageRequired");
                _ConformaitonMessageRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConformaitonMessageRequired");
                OnConformaitonMessageRequiredChanged();
            }
        }
        private global::System.Boolean _ConformaitonMessageRequired;
        partial void OnConformaitonMessageRequiredChanging(global::System.Boolean value);
        partial void OnConformaitonMessageRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HomeDelivery
        {
            get
            {
                return _HomeDelivery;
            }
            set
            {
                OnHomeDeliveryChanging(value);
                ReportPropertyChanging("HomeDelivery");
                _HomeDelivery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeDelivery");
                OnHomeDeliveryChanged();
            }
        }
        private global::System.Boolean _HomeDelivery;
        partial void OnHomeDeliveryChanging(global::System.Boolean value);
        partial void OnHomeDeliveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SideDishProvided
        {
            get
            {
                return _SideDishProvided;
            }
            set
            {
                OnSideDishProvidedChanging(value);
                ReportPropertyChanging("SideDishProvided");
                _SideDishProvided = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SideDishProvided");
                OnSideDishProvidedChanged();
            }
        }
        private global::System.Boolean _SideDishProvided;
        partial void OnSideDishProvidedChanging(global::System.Boolean value);
        partial void OnSideDishProvidedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Validated
        {
            get
            {
                return _Validated;
            }
            set
            {
                OnValidatedChanging(value);
                ReportPropertyChanging("Validated");
                _Validated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Validated");
                OnValidatedChanged();
            }
        }
        private global::System.Boolean _Validated;
        partial void OnValidatedChanging(global::System.Boolean value);
        partial void OnValidatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ingredients
        {
            get
            {
                return _Ingredients;
            }
            set
            {
                OnIngredientsChanging(value);
                ReportPropertyChanging("Ingredients");
                _Ingredients = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ingredients");
                OnIngredientsChanged();
            }
        }
        private global::System.String _Ingredients;
        partial void OnIngredientsChanging(global::System.String value);
        partial void OnIngredientsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserCity
        {
            get
            {
                return _UserCity;
            }
            set
            {
                OnUserCityChanging(value);
                ReportPropertyChanging("UserCity");
                _UserCity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCity");
                OnUserCityChanged();
            }
        }
        private Nullable<global::System.Int32> _UserCity;
        partial void OnUserCityChanging(Nullable<global::System.Int32> value);
        partial void OnUserCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserState
        {
            get
            {
                return _UserState;
            }
            set
            {
                OnUserStateChanging(value);
                ReportPropertyChanging("UserState");
                _UserState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserState");
                OnUserStateChanged();
            }
        }
        private Nullable<global::System.Int32> _UserState;
        partial void OnUserStateChanging(Nullable<global::System.Int32> value);
        partial void OnUserStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPostalStyleSeleted
        {
            get
            {
                return _IsPostalStyleSeleted;
            }
            set
            {
                OnIsPostalStyleSeletedChanging(value);
                ReportPropertyChanging("IsPostalStyleSeleted");
                _IsPostalStyleSeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPostalStyleSeleted");
                OnIsPostalStyleSeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPostalStyleSeleted;
        partial void OnIsPostalStyleSeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPostalStyleSeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MainIngredient
        {
            get
            {
                return _MainIngredient;
            }
            set
            {
                OnMainIngredientChanging(value);
                ReportPropertyChanging("MainIngredient");
                _MainIngredient = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MainIngredient");
                OnMainIngredientChanged();
            }
        }
        private global::System.String _MainIngredient;
        partial void OnMainIngredientChanging(global::System.String value);
        partial void OnMainIngredientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaceBookPostId
        {
            get
            {
                return _FaceBookPostId;
            }
            set
            {
                OnFaceBookPostIdChanging(value);
                ReportPropertyChanging("FaceBookPostId");
                _FaceBookPostId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaceBookPostId");
                OnFaceBookPostIdChanged();
            }
        }
        private global::System.String _FaceBookPostId;
        partial void OnFaceBookPostIdChanging(global::System.String value);
        partial void OnFaceBookPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SideListings
        {
            get
            {
                return _SideListings;
            }
            set
            {
                OnSideListingsChanging(value);
                ReportPropertyChanging("SideListings");
                _SideListings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SideListings");
                OnSideListingsChanged();
            }
        }
        private global::System.String _SideListings;
        partial void OnSideListingsChanging(global::System.String value);
        partial void OnSideListingsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_CuisineType", "CuisineType")]
        public CuisineType CuisineType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CuisineType>("KhanaWalModel.FK_Listing_CuisineType", "CuisineType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CuisineType>("KhanaWalModel.FK_Listing_CuisineType", "CuisineType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CuisineType> CuisineTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CuisineType>("KhanaWalModel.FK_Listing_CuisineType", "CuisineType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CuisineType>("KhanaWalModel.FK_Listing_CuisineType", "CuisineType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_LisitngReviews_Listing", "LisitngReview")]
        public EntityCollection<LisitngReview> LisitngReviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LisitngReview>("KhanaWalModel.FK_LisitngReviews_Listing", "LisitngReview");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LisitngReview>("KhanaWalModel.FK_LisitngReviews_Listing", "LisitngReview", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_RecipeType", "RecipeType")]
        public RecipeType RecipeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipeType>("KhanaWalModel.FK_Listing_RecipeType", "RecipeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipeType>("KhanaWalModel.FK_Listing_RecipeType", "RecipeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecipeType> RecipeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipeType>("KhanaWalModel.FK_Listing_RecipeType", "RecipeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecipeType>("KhanaWalModel.FK_Listing_RecipeType", "RecipeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_Taste", "Taste")]
        public Taste Taste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taste>("KhanaWalModel.FK_Listing_Taste", "Taste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taste>("KhanaWalModel.FK_Listing_Taste", "Taste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Taste> TasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taste>("KhanaWalModel.FK_Listing_Taste", "Taste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Taste>("KhanaWalModel.FK_Listing_Taste", "Taste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_Listing_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_Listing_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_Listing_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_Listing_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingAwards_Listing", "ListingAward")]
        public EntityCollection<ListingAward> ListingAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingAward>("KhanaWalModel.FK_ListingAwards_Listing", "ListingAward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingAward>("KhanaWalModel.FK_ListingAwards_Listing", "ListingAward", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingIngredients_Listing", "ListingIngredient")]
        public EntityCollection<ListingIngredient> ListingIngredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingIngredient>("KhanaWalModel.FK_ListingIngredients_Listing", "ListingIngredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingIngredient>("KhanaWalModel.FK_ListingIngredients_Listing", "ListingIngredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingPictures_Listing", "ListingPicture")]
        public EntityCollection<ListingPicture> ListingPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingPicture>("KhanaWalModel.FK_ListingPictures_Listing", "ListingPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingPicture>("KhanaWalModel.FK_ListingPictures_Listing", "ListingPicture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingRating_Listing", "ListingRating")]
        public EntityCollection<ListingRating> ListingRatings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingRating>("KhanaWalModel.FK_ListingRating_Listing", "ListingRating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingRating>("KhanaWalModel.FK_ListingRating_Listing", "ListingRating", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingRequest_Listing", "ListingRequest")]
        public EntityCollection<ListingRequest> ListingRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingRequest>("KhanaWalModel.FK_ListingRequest_Listing", "ListingRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingRequest>("KhanaWalModel.FK_ListingRequest_Listing", "ListingRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingTriedByUser_Listing", "ListingTriedByUser")]
        public EntityCollection<ListingTriedByUser> ListingTriedByUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingTriedByUser>("KhanaWalModel.FK_ListingTriedByUser_Listing", "ListingTriedByUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingTriedByUser>("KhanaWalModel.FK_ListingTriedByUser_Listing", "ListingTriedByUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_SideListings_Listing", "SideListingMapping")]
        public EntityCollection<SideListingMapping> SideListingMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SideListingMapping>("KhanaWalModel.FK_SideListings_Listing", "SideListingMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SideListingMapping>("KhanaWalModel.FK_SideListings_Listing", "SideListingMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_UserCalendar_Listing", "UserCalendar")]
        public EntityCollection<UserCalendar> UserCalendars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCalendar>("KhanaWalModel.FK_UserCalendar_Listing", "UserCalendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCalendar>("KhanaWalModel.FK_UserCalendar_Listing", "UserCalendar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_CurrencyType", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("KhanaWalModel.FK_Listing_CurrencyType", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("KhanaWalModel.FK_Listing_CurrencyType", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("KhanaWalModel.FK_Listing_CurrencyType", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("KhanaWalModel.FK_Listing_CurrencyType", "CurrencyType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="ListingAward")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingAward : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingAward object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="awardID">Initial value of the AwardID property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        public static ListingAward CreateListingAward(global::System.Int32 id, global::System.Int32 awardID, global::System.Int32 listingID)
        {
            ListingAward listingAward = new ListingAward();
            listingAward.ID = id;
            listingAward.AwardID = awardID;
            listingAward.ListingID = listingID;
            return listingAward;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AwardID
        {
            get
            {
                return _AwardID;
            }
            set
            {
                OnAwardIDChanging(value);
                ReportPropertyChanging("AwardID");
                _AwardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwardID");
                OnAwardIDChanged();
            }
        }
        private global::System.Int32 _AwardID;
        partial void OnAwardIDChanging(global::System.Int32 value);
        partial void OnAwardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingAwards_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingAwards_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingAwards_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingAwards_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_ListingAwards_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="ListingIngredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingIngredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingIngredient object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ingredientId">Initial value of the IngredientId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="isMainIngredient">Initial value of the IsMainIngredient property.</param>
        public static ListingIngredient CreateListingIngredient(global::System.Int32 id, global::System.Int32 ingredientId, global::System.Int32 listingId, global::System.Boolean isMainIngredient)
        {
            ListingIngredient listingIngredient = new ListingIngredient();
            listingIngredient.ID = id;
            listingIngredient.IngredientId = ingredientId;
            listingIngredient.ListingId = listingId;
            listingIngredient.IsMainIngredient = isMainIngredient;
            return listingIngredient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IngredientId
        {
            get
            {
                return _IngredientId;
            }
            set
            {
                OnIngredientIdChanging(value);
                ReportPropertyChanging("IngredientId");
                _IngredientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IngredientId");
                OnIngredientIdChanged();
            }
        }
        private global::System.Int32 _IngredientId;
        partial void OnIngredientIdChanging(global::System.Int32 value);
        partial void OnIngredientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int32 _ListingId;
        partial void OnListingIdChanging(global::System.Int32 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMainIngredient
        {
            get
            {
                return _IsMainIngredient;
            }
            set
            {
                OnIsMainIngredientChanging(value);
                ReportPropertyChanging("IsMainIngredient");
                _IsMainIngredient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMainIngredient");
                OnIsMainIngredientChanged();
            }
        }
        private global::System.Boolean _IsMainIngredient;
        partial void OnIsMainIngredientChanging(global::System.Boolean value);
        partial void OnIsMainIngredientChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingIngredients_Ingredients", "Ingredient")]
        public Ingredient Ingredient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ingredient>("KhanaWalModel.FK_ListingIngredients_Ingredients", "Ingredient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ingredient>("KhanaWalModel.FK_ListingIngredients_Ingredients", "Ingredient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ingredient> IngredientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ingredient>("KhanaWalModel.FK_ListingIngredients_Ingredients", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ingredient>("KhanaWalModel.FK_ListingIngredients_Ingredients", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingIngredients_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingIngredients_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingIngredients_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingIngredients_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_ListingIngredients_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="ListingPicture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingPicture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingPicture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        public static ListingPicture CreateListingPicture(global::System.Int32 id, global::System.Int32 listingID)
        {
            ListingPicture listingPicture = new ListingPicture();
            listingPicture.ID = id;
            listingPicture.ListingID = listingID;
            return listingPicture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayImageUrl
        {
            get
            {
                return _DisplayImageUrl;
            }
            set
            {
                OnDisplayImageUrlChanging(value);
                ReportPropertyChanging("DisplayImageUrl");
                _DisplayImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayImageUrl");
                OnDisplayImageUrlChanged();
            }
        }
        private global::System.String _DisplayImageUrl;
        partial void OnDisplayImageUrlChanging(global::System.String value);
        partial void OnDisplayImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageResolution
        {
            get
            {
                return _ImageResolution;
            }
            set
            {
                OnImageResolutionChanging(value);
                ReportPropertyChanging("ImageResolution");
                _ImageResolution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageResolution");
                OnImageResolutionChanged();
            }
        }
        private global::System.String _ImageResolution;
        partial void OnImageResolutionChanging(global::System.String value);
        partial void OnImageResolutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FitForMainDisplaySlider
        {
            get
            {
                return _FitForMainDisplaySlider;
            }
            set
            {
                OnFitForMainDisplaySliderChanging(value);
                ReportPropertyChanging("FitForMainDisplaySlider");
                _FitForMainDisplaySlider = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FitForMainDisplaySlider");
                OnFitForMainDisplaySliderChanged();
            }
        }
        private Nullable<global::System.Boolean> _FitForMainDisplaySlider;
        partial void OnFitForMainDisplaySliderChanging(Nullable<global::System.Boolean> value);
        partial void OnFitForMainDisplaySliderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayOrder;
        partial void OnDisplayOrderChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingPictures_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingPictures_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingPictures_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingPictures_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_ListingPictures_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="ListingRating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingRating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingRating object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        public static ListingRating CreateListingRating(global::System.Int32 id, global::System.Int32 listingID, global::System.Int32 rating)
        {
            ListingRating listingRating = new ListingRating();
            listingRating.ID = id;
            listingRating.ListingID = listingID;
            listingRating.Rating = rating;
            return listingRating;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Int32 _Rating;
        partial void OnRatingChanging(global::System.Int32 value);
        partial void OnRatingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingRating_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingRating_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingRating_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingRating_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_ListingRating_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="ListingRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingRequest object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="requestedServings">Initial value of the RequestedServings property.</param>
        /// <param name="requestedDate">Initial value of the RequestedDate property.</param>
        /// <param name="isConfirmed">Initial value of the IsConfirmed property.</param>
        /// <param name="requestAccepted">Initial value of the RequestAccepted property.</param>
        public static ListingRequest CreateListingRequest(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 requestedServings, global::System.DateTime requestedDate, global::System.Boolean isConfirmed, global::System.Boolean requestAccepted)
        {
            ListingRequest listingRequest = new ListingRequest();
            listingRequest.ID = id;
            listingRequest.UserID = userID;
            listingRequest.RequestedServings = requestedServings;
            listingRequest.RequestedDate = requestedDate;
            listingRequest.IsConfirmed = isConfirmed;
            listingRequest.RequestAccepted = requestAccepted;
            return listingRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ListingID;
        partial void OnListingIDChanging(Nullable<global::System.Int32> value);
        partial void OnListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestedServings
        {
            get
            {
                return _RequestedServings;
            }
            set
            {
                OnRequestedServingsChanging(value);
                ReportPropertyChanging("RequestedServings");
                _RequestedServings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedServings");
                OnRequestedServingsChanged();
            }
        }
        private global::System.Int32 _RequestedServings;
        partial void OnRequestedServingsChanging(global::System.Int32 value);
        partial void OnRequestedServingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestedDate
        {
            get
            {
                return _RequestedDate;
            }
            set
            {
                OnRequestedDateChanging(value);
                ReportPropertyChanging("RequestedDate");
                _RequestedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedDate");
                OnRequestedDateChanged();
            }
        }
        private global::System.DateTime _RequestedDate;
        partial void OnRequestedDateChanging(global::System.DateTime value);
        partial void OnRequestedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private global::System.Boolean _IsConfirmed;
        partial void OnIsConfirmedChanging(global::System.Boolean value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RequestAccepted
        {
            get
            {
                return _RequestAccepted;
            }
            set
            {
                OnRequestAcceptedChanging(value);
                ReportPropertyChanging("RequestAccepted");
                _RequestAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestAccepted");
                OnRequestAcceptedChanged();
            }
        }
        private global::System.Boolean _RequestAccepted;
        partial void OnRequestAcceptedChanging(global::System.Boolean value);
        partial void OnRequestAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MainMessage_ListingRequest", "MainMessage")]
        public EntityCollection<MainMessage> MainMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainMessage>("KhanaWalModel.FK_MainMessage_ListingRequest", "MainMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainMessage>("KhanaWalModel.FK_MainMessage_ListingRequest", "MainMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingRequest_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_ListingRequest_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_ListingRequest_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_ListingRequest_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_ListingRequest_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingRequest_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingRequest_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingRequest_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingRequest_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_ListingRequest_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="ListingTriedByUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingTriedByUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingTriedByUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static ListingTriedByUser CreateListingTriedByUser(global::System.Int32 id, global::System.Int32 listingID, global::System.Int32 userID)
        {
            ListingTriedByUser listingTriedByUser = new ListingTriedByUser();
            listingTriedByUser.ID = id;
            listingTriedByUser.ListingID = listingID;
            listingTriedByUser.UserID = userID;
            return listingTriedByUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingTriedByUser_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_ListingTriedByUser_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_ListingTriedByUser_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_ListingTriedByUser_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_ListingTriedByUser_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingTriedByUser_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingTriedByUser_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingTriedByUser_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_ListingTriedByUser_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_ListingTriedByUser_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="Localization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Localization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Localization object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Localization CreateLocalization(global::System.Int32 id)
        {
            Localization localization = new Localization();
            localization.ID = id;
            return localization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language
        {
            get
            {
                return _language;
            }
            set
            {
                OnlanguageChanging(value);
                ReportPropertyChanging("language");
                _language = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("language");
                OnlanguageChanged();
            }
        }
        private Nullable<global::System.Int32> _language;
        partial void OnlanguageChanging(Nullable<global::System.Int32> value);
        partial void OnlanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private Nullable<global::System.Int32> _Description;
        partial void OnDescriptionChanging(Nullable<global::System.Int32> value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="MainMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MainMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MainMessage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="listingRequestID">Initial value of the ListingRequestID property.</param>
        public static MainMessage CreateMainMessage(global::System.Int32 id, global::System.Boolean isDeleted, global::System.Int32 listingRequestID)
        {
            MainMessage mainMessage = new MainMessage();
            mainMessage.ID = id;
            mainMessage.IsDeleted = isDeleted;
            mainMessage.ListingRequestID = listingRequestID;
            return mainMessage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingRequestID
        {
            get
            {
                return _ListingRequestID;
            }
            set
            {
                OnListingRequestIDChanging(value);
                ReportPropertyChanging("ListingRequestID");
                _ListingRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingRequestID");
                OnListingRequestIDChanged();
            }
        }
        private global::System.Int32 _ListingRequestID;
        partial void OnListingRequestIDChanging(global::System.Int32 value);
        partial void OnListingRequestIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MainMessage_ListingRequest", "ListingRequest")]
        public ListingRequest ListingRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingRequest>("KhanaWalModel.FK_MainMessage_ListingRequest", "ListingRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingRequest>("KhanaWalModel.FK_MainMessage_ListingRequest", "ListingRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingRequest> ListingRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingRequest>("KhanaWalModel.FK_MainMessage_ListingRequest", "ListingRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingRequest>("KhanaWalModel.FK_MainMessage_ListingRequest", "ListingRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MessageThread_MainMessage", "MessageThread")]
        public EntityCollection<MessageThread> MessageThreads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageThread>("KhanaWalModel.FK_MessageThread_MainMessage", "MessageThread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageThread>("KhanaWalModel.FK_MessageThread_MainMessage", "MessageThread", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="MessageThread")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageThread : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageThread object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="messageReadRequestor">Initial value of the MessageReadRequestor property.</param>
        /// <param name="mainMessageID">Initial value of the MainMessageID property.</param>
        /// <param name="fromUserID">Initial value of the FromUserID property.</param>
        /// <param name="toUserID">Initial value of the ToUserID property.</param>
        /// <param name="messageDate">Initial value of the MessageDate property.</param>
        /// <param name="isFirstMessage">Initial value of the IsFirstMessage property.</param>
        /// <param name="messageReadListingOwner">Initial value of the MessageReadListingOwner property.</param>
        public static MessageThread CreateMessageThread(global::System.Int32 id, global::System.Boolean messageReadRequestor, global::System.Int32 mainMessageID, global::System.Int32 fromUserID, global::System.Int32 toUserID, global::System.DateTime messageDate, global::System.Boolean isFirstMessage, global::System.Boolean messageReadListingOwner)
        {
            MessageThread messageThread = new MessageThread();
            messageThread.ID = id;
            messageThread.MessageReadRequestor = messageReadRequestor;
            messageThread.MainMessageID = mainMessageID;
            messageThread.FromUserID = fromUserID;
            messageThread.ToUserID = toUserID;
            messageThread.MessageDate = messageDate;
            messageThread.IsFirstMessage = isFirstMessage;
            messageThread.MessageReadListingOwner = messageReadListingOwner;
            return messageThread;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserMessage
        {
            get
            {
                return _UserMessage;
            }
            set
            {
                OnUserMessageChanging(value);
                ReportPropertyChanging("UserMessage");
                _UserMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserMessage");
                OnUserMessageChanged();
            }
        }
        private global::System.String _UserMessage;
        partial void OnUserMessageChanging(global::System.String value);
        partial void OnUserMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MessageReadRequestor
        {
            get
            {
                return _MessageReadRequestor;
            }
            set
            {
                OnMessageReadRequestorChanging(value);
                ReportPropertyChanging("MessageReadRequestor");
                _MessageReadRequestor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageReadRequestor");
                OnMessageReadRequestorChanged();
            }
        }
        private global::System.Boolean _MessageReadRequestor;
        partial void OnMessageReadRequestorChanging(global::System.Boolean value);
        partial void OnMessageReadRequestorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MainMessageID
        {
            get
            {
                return _MainMessageID;
            }
            set
            {
                OnMainMessageIDChanging(value);
                ReportPropertyChanging("MainMessageID");
                _MainMessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainMessageID");
                OnMainMessageIDChanged();
            }
        }
        private global::System.Int32 _MainMessageID;
        partial void OnMainMessageIDChanging(global::System.Int32 value);
        partial void OnMainMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserID
        {
            get
            {
                return _FromUserID;
            }
            set
            {
                OnFromUserIDChanging(value);
                ReportPropertyChanging("FromUserID");
                _FromUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserID");
                OnFromUserIDChanged();
            }
        }
        private global::System.Int32 _FromUserID;
        partial void OnFromUserIDChanging(global::System.Int32 value);
        partial void OnFromUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserID
        {
            get
            {
                return _ToUserID;
            }
            set
            {
                OnToUserIDChanging(value);
                ReportPropertyChanging("ToUserID");
                _ToUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserID");
                OnToUserIDChanged();
            }
        }
        private global::System.Int32 _ToUserID;
        partial void OnToUserIDChanging(global::System.Int32 value);
        partial void OnToUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageDate
        {
            get
            {
                return _MessageDate;
            }
            set
            {
                OnMessageDateChanging(value);
                ReportPropertyChanging("MessageDate");
                _MessageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageDate");
                OnMessageDateChanged();
            }
        }
        private global::System.DateTime _MessageDate;
        partial void OnMessageDateChanging(global::System.DateTime value);
        partial void OnMessageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFirstMessage
        {
            get
            {
                return _IsFirstMessage;
            }
            set
            {
                OnIsFirstMessageChanging(value);
                ReportPropertyChanging("IsFirstMessage");
                _IsFirstMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFirstMessage");
                OnIsFirstMessageChanged();
            }
        }
        private global::System.Boolean _IsFirstMessage;
        partial void OnIsFirstMessageChanging(global::System.Boolean value);
        partial void OnIsFirstMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ListingAccepted
        {
            get
            {
                return _ListingAccepted;
            }
            set
            {
                OnListingAcceptedChanging(value);
                ReportPropertyChanging("ListingAccepted");
                _ListingAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingAccepted");
                OnListingAcceptedChanged();
            }
        }
        private Nullable<global::System.Boolean> _ListingAccepted;
        partial void OnListingAcceptedChanging(Nullable<global::System.Boolean> value);
        partial void OnListingAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MessageReadListingOwner
        {
            get
            {
                return _MessageReadListingOwner;
            }
            set
            {
                OnMessageReadListingOwnerChanging(value);
                ReportPropertyChanging("MessageReadListingOwner");
                _MessageReadListingOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageReadListingOwner");
                OnMessageReadListingOwnerChanged();
            }
        }
        private global::System.Boolean _MessageReadListingOwner;
        partial void OnMessageReadListingOwnerChanging(global::System.Boolean value);
        partial void OnMessageReadListingOwnerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MessageThread_MainMessage", "MainMessage")]
        public MainMessage MainMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainMessage>("KhanaWalModel.FK_MessageThread_MainMessage", "MainMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainMessage>("KhanaWalModel.FK_MessageThread_MainMessage", "MainMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MainMessage> MainMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainMessage>("KhanaWalModel.FK_MessageThread_MainMessage", "MainMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MainMessage>("KhanaWalModel.FK_MessageThread_MainMessage", "MainMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MessageThread_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_MessageThread_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_MessageThread_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_MessageThread_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_MessageThread_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MessageThread_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_MessageThread_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_MessageThread_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_MessageThread_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_MessageThread_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="RecipeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecipeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecipeType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RecipeType CreateRecipeType(global::System.Int32 id, global::System.String name)
        {
            RecipeType recipeType = new RecipeType();
            recipeType.ID = id;
            recipeType.Name = name;
            return recipeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_RecipeType", "Listing")]
        public EntityCollection<Listing> Listings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("KhanaWalModel.FK_Listing_RecipeType", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("KhanaWalModel.FK_Listing_RecipeType", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="SideListing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SideListing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SideListing object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SideListing CreateSideListing(global::System.Int32 id, global::System.String name)
        {
            SideListing sideListing = new SideListing();
            sideListing.ID = id;
            sideListing.Name = name;
            return sideListing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_SideListingMapping_SideListings", "SideListingMapping")]
        public EntityCollection<SideListingMapping> SideListingMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SideListingMapping>("KhanaWalModel.FK_SideListingMapping_SideListings", "SideListingMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SideListingMapping>("KhanaWalModel.FK_SideListingMapping_SideListings", "SideListingMapping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="SideListingMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SideListingMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SideListingMapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        /// <param name="sideListingID">Initial value of the SideListingID property.</param>
        /// <param name="validated">Initial value of the Validated property.</param>
        public static SideListingMapping CreateSideListingMapping(global::System.Int32 id, global::System.Int32 listingID, global::System.Int32 sideListingID, global::System.Boolean validated)
        {
            SideListingMapping sideListingMapping = new SideListingMapping();
            sideListingMapping.ID = id;
            sideListingMapping.ListingID = listingID;
            sideListingMapping.SideListingID = sideListingID;
            sideListingMapping.Validated = validated;
            return sideListingMapping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SideListingID
        {
            get
            {
                return _SideListingID;
            }
            set
            {
                OnSideListingIDChanging(value);
                ReportPropertyChanging("SideListingID");
                _SideListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SideListingID");
                OnSideListingIDChanged();
            }
        }
        private global::System.Int32 _SideListingID;
        partial void OnSideListingIDChanging(global::System.Int32 value);
        partial void OnSideListingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Validated
        {
            get
            {
                return _Validated;
            }
            set
            {
                OnValidatedChanging(value);
                ReportPropertyChanging("Validated");
                _Validated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Validated");
                OnValidatedChanged();
            }
        }
        private global::System.Boolean _Validated;
        partial void OnValidatedChanging(global::System.Boolean value);
        partial void OnValidatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_SideListingMapping_SideListings", "SideListing")]
        public SideListing SideListing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SideListing>("KhanaWalModel.FK_SideListingMapping_SideListings", "SideListing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SideListing>("KhanaWalModel.FK_SideListingMapping_SideListings", "SideListing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SideListing> SideListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SideListing>("KhanaWalModel.FK_SideListingMapping_SideListings", "SideListing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SideListing>("KhanaWalModel.FK_SideListingMapping_SideListings", "SideListing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_SideListings_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_SideListings_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_SideListings_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_SideListings_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_SideListings_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static State CreateState(global::System.Int32 id, global::System.String name)
        {
            State state = new State();
            state.ID = id;
            state.Name = name;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Cities_States", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("KhanaWalModel.FK_Cities_States", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("KhanaWalModel.FK_Cities_States", "City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="Taste")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Taste : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Taste object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tasteDesc">Initial value of the TasteDesc property.</param>
        public static Taste CreateTaste(global::System.Int32 id, global::System.String tasteDesc)
        {
            Taste taste = new Taste();
            taste.ID = id;
            taste.TasteDesc = tasteDesc;
            return taste;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TasteDesc
        {
            get
            {
                return _TasteDesc;
            }
            set
            {
                OnTasteDescChanging(value);
                ReportPropertyChanging("TasteDesc");
                _TasteDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TasteDesc");
                OnTasteDescChanged();
            }
        }
        private global::System.String _TasteDesc;
        partial void OnTasteDescChanging(global::System.String value);
        partial void OnTasteDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_Taste", "Listing")]
        public EntityCollection<Listing> Listings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("KhanaWalModel.FK_Listing_Taste", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("KhanaWalModel.FK_Listing_Taste", "Listing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestTasteMapping_Taste", "AdHocRequestTasteMapping")]
        public EntityCollection<AdHocRequestTasteMapping> AdHocRequestTasteMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdHocRequestTasteMapping>("KhanaWalModel.FK_AdHocRequestTasteMapping_Taste", "AdHocRequestTasteMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdHocRequestTasteMapping>("KhanaWalModel.FK_AdHocRequestTasteMapping_Taste", "AdHocRequestTasteMapping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.Boolean isActive)
        {
            User user = new User();
            user.UserID = userID;
            user.IsActive = isActive;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fb_id
        {
            get
            {
                return _fb_id;
            }
            set
            {
                Onfb_idChanging(value);
                ReportPropertyChanging("fb_id");
                _fb_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fb_id");
                Onfb_idChanged();
            }
        }
        private global::System.String _fb_id;
        partial void Onfb_idChanging(global::System.String value);
        partial void Onfb_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _UserType;
        partial void OnUserTypeChanging(Nullable<global::System.Int32> value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> JoinedDate
        {
            get
            {
                return _JoinedDate;
            }
            set
            {
                OnJoinedDateChanging(value);
                ReportPropertyChanging("JoinedDate");
                _JoinedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinedDate");
                OnJoinedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _JoinedDate;
        partial void OnJoinedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnJoinedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AddressLang
        {
            get
            {
                return _AddressLang;
            }
            set
            {
                OnAddressLangChanging(value);
                ReportPropertyChanging("AddressLang");
                _AddressLang = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressLang");
                OnAddressLangChanged();
            }
        }
        private Nullable<global::System.Double> _AddressLang;
        partial void OnAddressLangChanging(Nullable<global::System.Double> value);
        partial void OnAddressLangChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AddressLat
        {
            get
            {
                return _AddressLat;
            }
            set
            {
                OnAddressLatChanging(value);
                ReportPropertyChanging("AddressLat");
                _AddressLat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressLat");
                OnAddressLatChanged();
            }
        }
        private Nullable<global::System.Double> _AddressLat;
        partial void OnAddressLatChanging(Nullable<global::System.Double> value);
        partial void OnAddressLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CreateFacebookPost
        {
            get
            {
                return _CreateFacebookPost;
            }
            set
            {
                OnCreateFacebookPostChanging(value);
                ReportPropertyChanging("CreateFacebookPost");
                _CreateFacebookPost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateFacebookPost");
                OnCreateFacebookPostChanged();
            }
        }
        private Nullable<global::System.Boolean> _CreateFacebookPost;
        partial void OnCreateFacebookPostChanging(Nullable<global::System.Boolean> value);
        partial void OnCreateFacebookPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ReceiveSMS
        {
            get
            {
                return _ReceiveSMS;
            }
            set
            {
                OnReceiveSMSChanging(value);
                ReportPropertyChanging("ReceiveSMS");
                _ReceiveSMS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiveSMS");
                OnReceiveSMSChanged();
            }
        }
        private Nullable<global::System.Boolean> _ReceiveSMS;
        partial void OnReceiveSMSChanging(Nullable<global::System.Boolean> value);
        partial void OnReceiveSMSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserCity
        {
            get
            {
                return _UserCity;
            }
            set
            {
                OnUserCityChanging(value);
                ReportPropertyChanging("UserCity");
                _UserCity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCity");
                OnUserCityChanged();
            }
        }
        private Nullable<global::System.Int32> _UserCity;
        partial void OnUserCityChanging(Nullable<global::System.Int32> value);
        partial void OnUserCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserState
        {
            get
            {
                return _UserState;
            }
            set
            {
                OnUserStateChanging(value);
                ReportPropertyChanging("UserState");
                _UserState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserState");
                OnUserStateChanged();
            }
        }
        private Nullable<global::System.Int32> _UserState;
        partial void OnUserStateChanging(Nullable<global::System.Int32> value);
        partial void OnUserStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPostalStyleSeleted
        {
            get
            {
                return _IsPostalStyleSeleted;
            }
            set
            {
                OnIsPostalStyleSeletedChanging(value);
                ReportPropertyChanging("IsPostalStyleSeleted");
                _IsPostalStyleSeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPostalStyleSeleted");
                OnIsPostalStyleSeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPostalStyleSeleted;
        partial void OnIsPostalStyleSeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPostalStyleSeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ServeAdHocRequest
        {
            get
            {
                return _ServeAdHocRequest;
            }
            set
            {
                OnServeAdHocRequestChanging(value);
                ReportPropertyChanging("ServeAdHocRequest");
                _ServeAdHocRequest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServeAdHocRequest");
                OnServeAdHocRequestChanged();
            }
        }
        private Nullable<global::System.Boolean> _ServeAdHocRequest;
        partial void OnServeAdHocRequestChanging(Nullable<global::System.Boolean> value);
        partial void OnServeAdHocRequestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ServeAdHocVeg
        {
            get
            {
                return _ServeAdHocVeg;
            }
            set
            {
                OnServeAdHocVegChanging(value);
                ReportPropertyChanging("ServeAdHocVeg");
                _ServeAdHocVeg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServeAdHocVeg");
                OnServeAdHocVegChanged();
            }
        }
        private Nullable<global::System.Boolean> _ServeAdHocVeg;
        partial void OnServeAdHocVegChanging(Nullable<global::System.Boolean> value);
        partial void OnServeAdHocVegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ServeAdHocNonVeg
        {
            get
            {
                return _ServeAdHocNonVeg;
            }
            set
            {
                OnServeAdHocNonVegChanging(value);
                ReportPropertyChanging("ServeAdHocNonVeg");
                _ServeAdHocNonVeg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServeAdHocNonVeg");
                OnServeAdHocNonVegChanged();
            }
        }
        private Nullable<global::System.Boolean> _ServeAdHocNonVeg;
        partial void OnServeAdHocNonVegChanging(Nullable<global::System.Boolean> value);
        partial void OnServeAdHocNonVegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreferredCurrencyType
        {
            get
            {
                return _PreferredCurrencyType;
            }
            set
            {
                OnPreferredCurrencyTypeChanging(value);
                ReportPropertyChanging("PreferredCurrencyType");
                _PreferredCurrencyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreferredCurrencyType");
                OnPreferredCurrencyTypeChanged();
            }
        }
        private global::System.String _PreferredCurrencyType;
        partial void OnPreferredCurrencyTypeChanging(global::System.String value);
        partial void OnPreferredCurrencyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AgreedTerms
        {
            get
            {
                return _AgreedTerms;
            }
            set
            {
                OnAgreedTermsChanging(value);
                ReportPropertyChanging("AgreedTerms");
                _AgreedTerms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreedTerms");
                OnAgreedTermsChanged();
            }
        }
        private Nullable<global::System.Boolean> _AgreedTerms;
        partial void OnAgreedTermsChanging(Nullable<global::System.Boolean> value);
        partial void OnAgreedTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_LisitngReviews_User", "LisitngReview")]
        public EntityCollection<LisitngReview> LisitngReviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LisitngReview>("KhanaWalModel.FK_LisitngReviews_User", "LisitngReview");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LisitngReview>("KhanaWalModel.FK_LisitngReviews_User", "LisitngReview", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingRequest_User", "ListingRequest")]
        public EntityCollection<ListingRequest> ListingRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingRequest>("KhanaWalModel.FK_ListingRequest_User", "ListingRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingRequest>("KhanaWalModel.FK_ListingRequest_User", "ListingRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_ListingTriedByUser_User", "ListingTriedByUser")]
        public EntityCollection<ListingTriedByUser> ListingTriedByUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingTriedByUser>("KhanaWalModel.FK_ListingTriedByUser_User", "ListingTriedByUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingTriedByUser>("KhanaWalModel.FK_ListingTriedByUser_User", "ListingTriedByUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MessageThread_User", "MessageThread")]
        public EntityCollection<MessageThread> MessageThreads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageThread>("KhanaWalModel.FK_MessageThread_User", "MessageThread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageThread>("KhanaWalModel.FK_MessageThread_User", "MessageThread", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_MessageThread_User1", "MessageThread")]
        public EntityCollection<MessageThread> MessageThreads1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageThread>("KhanaWalModel.FK_MessageThread_User1", "MessageThread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageThread>("KhanaWalModel.FK_MessageThread_User1", "MessageThread", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_UserCalendar_User", "UserCalendar")]
        public EntityCollection<UserCalendar> UserCalendars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCalendar>("KhanaWalModel.FK_UserCalendar_User", "UserCalendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCalendar>("KhanaWalModel.FK_UserCalendar_User", "UserCalendar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_Listing_User", "Listing")]
        public EntityCollection<Listing> Listings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("KhanaWalModel.FK_Listing_User", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("KhanaWalModel.FK_Listing_User", "Listing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequestUserMapping_User", "AdHocRequestUserMapping")]
        public EntityCollection<AdHocRequestUserMapping> AdHocRequestUserMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdHocRequestUserMapping>("KhanaWalModel.FK_AdHocRequestUserMapping_User", "AdHocRequestUserMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdHocRequestUserMapping>("KhanaWalModel.FK_AdHocRequestUserMapping_User", "AdHocRequestUserMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_AdHocRequest_User", "AdHocRequest")]
        public EntityCollection<AdHocRequest> AdHocRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdHocRequest>("KhanaWalModel.FK_AdHocRequest_User", "AdHocRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdHocRequest>("KhanaWalModel.FK_AdHocRequest_User", "AdHocRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="UserCalendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCalendar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCalendar object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="busyDate">Initial value of the BusyDate property.</param>
        public static UserCalendar CreateUserCalendar(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime busyDate)
        {
            UserCalendar userCalendar = new UserCalendar();
            userCalendar.ID = id;
            userCalendar.UserId = userId;
            userCalendar.BusyDate = busyDate;
            return userCalendar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ListingId;
        partial void OnListingIdChanging(Nullable<global::System.Int32> value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BusyDate
        {
            get
            {
                return _BusyDate;
            }
            set
            {
                OnBusyDateChanging(value);
                ReportPropertyChanging("BusyDate");
                _BusyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusyDate");
                OnBusyDateChanged();
            }
        }
        private global::System.DateTime _BusyDate;
        partial void OnBusyDateChanging(global::System.DateTime value);
        partial void OnBusyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FirstHalf
        {
            get
            {
                return _FirstHalf;
            }
            set
            {
                OnFirstHalfChanging(value);
                ReportPropertyChanging("FirstHalf");
                _FirstHalf = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstHalf");
                OnFirstHalfChanged();
            }
        }
        private Nullable<global::System.Boolean> _FirstHalf;
        partial void OnFirstHalfChanging(Nullable<global::System.Boolean> value);
        partial void OnFirstHalfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SecondHalf
        {
            get
            {
                return _SecondHalf;
            }
            set
            {
                OnSecondHalfChanging(value);
                ReportPropertyChanging("SecondHalf");
                _SecondHalf = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondHalf");
                OnSecondHalfChanged();
            }
        }
        private Nullable<global::System.Boolean> _SecondHalf;
        partial void OnSecondHalfChanging(Nullable<global::System.Boolean> value);
        partial void OnSecondHalfChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_UserCalendar_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_UserCalendar_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_UserCalendar_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("KhanaWalModel.FK_UserCalendar_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("KhanaWalModel.FK_UserCalendar_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KhanaWalModel", "FK_UserCalendar_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_UserCalendar_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_UserCalendar_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("KhanaWalModel.FK_UserCalendar_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("KhanaWalModel.FK_UserCalendar_Listing", "Listing", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="UserRecommendation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRecommendation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRecommendation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="listingID">Initial value of the ListingID property.</param>
        public static UserRecommendation CreateUserRecommendation(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 listingID)
        {
            UserRecommendation userRecommendation = new UserRecommendation();
            userRecommendation.ID = id;
            userRecommendation.UserId = userId;
            userRecommendation.ListingID = listingID;
            return userRecommendation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingID
        {
            get
            {
                return _ListingID;
            }
            set
            {
                OnListingIDChanging(value);
                ReportPropertyChanging("ListingID");
                _ListingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingID");
                OnListingIDChanged();
            }
        }
        private global::System.Int32 _ListingID;
        partial void OnListingIDChanging(global::System.Int32 value);
        partial void OnListingIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KhanaWalModel", Name="UserWishList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserWishList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserWishList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="listngID">Initial value of the ListngID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static UserWishList CreateUserWishList(global::System.Int32 id, global::System.Int32 listngID, global::System.Int32 userID)
        {
            UserWishList userWishList = new UserWishList();
            userWishList.ID = id;
            userWishList.ListngID = listngID;
            userWishList.UserID = userID;
            return userWishList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListngID
        {
            get
            {
                return _ListngID;
            }
            set
            {
                OnListngIDChanging(value);
                ReportPropertyChanging("ListngID");
                _ListngID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListngID");
                OnListngIDChanged();
            }
        }
        private global::System.Int32 _ListngID;
        partial void OnListngIDChanging(global::System.Int32 value);
        partial void OnListngIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
    }

    #endregion
    
}
